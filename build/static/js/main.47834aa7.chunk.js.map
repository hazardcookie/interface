{"version":3,"sources":["Components/connectWalletPage.js","constants/chains.js","constants/coins.js","ethereumFunctions.js","network.js","NavBar/MenuItems.js","NavBar/NavBar.js","CoinSwapper/CoinField.js","CoinSwapper/CoinButton.js","CoinSwapper/CoinDialog.js","Components/LoadingButton.js","Components/wrongNetwork.js","CoinSwapper/CoinSwapper.js","Liquidity/SwitchButton.js","Liquidity/LiquidityFunctions.js","Liquidity/LiquidityDeployer.js","Liquidity/RemoveLiquidity.js","Liquidity/Liquidity.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","maxWidth","margin","marginTop","fullWidth","width","title","textAlign","marginBottom","hr","balance","overflow","buttonIcon","marginRight","footer","ConnectWalletPage","classes","className","Container","Paper","Typography","variant","color","Grid","container","direction","justifyContent","alignItems","class","href","networks","ChainId","routerAddress","Map","set","COINS","chains","name","abbr","address","ROUTER","require","ERC20","FACTORY","PAIR","getNetwork","provider","a","network","chainId","getRouter","signer","Contract","abi","getWeth","getFactory","getAccount","window","ethereum","request","method","accounts","getDecimals","token","decimals","then","result","catch","error","console","log","getBalanceAndSymbol","accountAddress","weth_address","coins","getBalance","balanceRaw","ethers","utils","formatEther","symbol","tokenDecimals","balanceOf","address1","address2","amount","routerContract","tokens","time","Math","floor","Date","now","deadline","BigNumber","from","token1","amountIn","parseUnits","callStatic","getAmountsOut","amountOut","approve","WETH","wethAddress","swapExactETHForTokens","value","swapExactTokensForETH","swapExactTokensForTokens","token1Decimals","token2","token2Decimals","String","values_out","amount_out","Number","fetchReserves","pair","coin1","coin2","coin1Decimals","coin2Decimals","getReserves","reservesRaw","token0","results","factory","getPair","pairAddress","liquidityTokens_BN","liquidityTokens","toPrecision","createTheme","palette","primary","main","contrastText","secondary","Web3Provider","props","useState","isConnected","setConnected","Object","create","useRef","account","chainID","router","weth","backgroundListener","setupConnection","providers","getSigner","includes","get","factory_address","createListener","setInterval","useEffect","current","clearInterval","listener","render","MenuItems","url","cName","NavBar","state","clicked","map","item","index","to","Component","minHeight","backgroundColor","borderColor","COLORS","borderWidth","borderStyle","container_input","marginLeft","container_blank","grid","height","fab","zIndex","input","typography","h5","inputBase","RemoveLiquidityField1","onClick","onChange","activeField","xs","Fab","size","InputBase","placeholder","disabled","root","RemoveLiquidityField2","CoinField","button","paddingTop","coinName","opacity","CoinButton","coinAbbr","ButtonBase","focusRipple","styles","dialogContainer","titleSection","titleText","alignSelf","paddingLeft","paddingRight","coinList","overflowY","coinContainer","DialogTitle","withStyles","children","onClose","other","disableTypography","alignContent","IconButton","aria-label","DialogActions","MuiDialogActions","CoinDialog","open","React","setAddress","setError","exit","Dialog","undefined","paper","TextField","e","target","helperText","coin","Button","autoFocus","err","doesTokenExist","wrapper","position","progress","green","top","left","LoadingButton","loading","valid","success","fail","type","CircularProgress","WrongNetwork","switchButton","CoinSwapper","enqueueSnackbar","useSnackbar","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","setCoin1","setCoin2","reserves","setReserves","field1Value","setField1Value","field2Value","setField2Value","setLoading","switchFields","reverse","handleChange","field1","formatBalance","parseFloat","formatReserve","reserve","data","isNaN","getAmountOut","toFixed","coinTimeout","setTimeout","clearTimeout","fontSize","parsedInput1","parsedInput2","isButtonEnabled","swapTokens","message","autoHideDuration","SwitchButton","setDeploy","changeStyles","K","document","getElementById","style","ButtonGroup","id","text","amount1","amount2","amount1min","amount2min","amountIn1","amountIn2","amount1Min","amount2Min","addLiquidityETH","gasLimit","gasPrice","addLiquidity","liquidity_tokens","liquidity","Getliquidity","removeLiquidityETH","removeLiquidity","quote","reserve1","reserve2","quoteMintLiquidity","amountA","amountB","MINIMUM_LIQUIDITY","_reserveA","_reserveB","totalSupply","reserveA","reserveB","_totalSupply","valueA","valueB","sqrt","min","amountADesired","amountBDesired","amountBOptimal","amountAOptimal","feeTo","feeOn","kLast","_kLast","feeLiquidity","Aout","Bout","background","values","borderTop","LiquidityDeployer","setLiquidityTokens","liquidityOut","setLiquidityOut","oldField1Value","oldField2Value","field2","NaN","quoteAddLiquidity","networksigner","LiquidityRemover","tokensOut","setTokensOut","parsedInput","quoteRemoveLiquidity","Liquidity","deploy","deploy_or_remove","h6","App","maxSnack","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.47834aa7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    maxWidth: 700,\r\n    margin: \"auto\",\r\n    marginTop: \"200px\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.4),\r\n  },\r\n  footer: {\r\n    marginTop: \"155px\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction ConnectWalletPage() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className=\"Title\">\r\n        <h1 className=\"navbar-logo\">\r\n          CookieSwap\r\n        </h1>\r\n      </div>\r\n\r\n      <Container>\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            color=\"common.white\"\r\n          >\r\n            Please connect an XRPL EVM Sidechain wallet to your browser to use the\r\n            application\r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n\r\n      <Grid\r\n        container\r\n        className={classes.footer}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <p  class=\"footer-text\">\r\n          CookieSwap | By: @{\"\"}\r\n          <a class=\"footer-link\" href=\"https://twitter.com/hazardcookie\">hazardcookie</a>\r\n        </p>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectWalletPage;\r\n","export const networks = [1440001, 1, 3,4,5,42,123, 1337, 65110000, 65010000]\r\n\r\nexport const ChainId = {\r\n  XRPL: 1440001,\r\n  MAINNET: 1,\r\n  ROPSTEN: 3,\r\n  RINKEBY: 4,\r\n  GÖRLI: 5,\r\n  KOVAN: 42,\r\n  DEVNET: 65110000,\r\n  AUTONITY: 65010000,\r\n  PARASTATE: 123,\r\n  GANCHE: 1337\r\n};\r\n\r\nexport const routerAddress = new Map();\r\nrouterAddress.set(ChainId.XRPL, \"0x662edb2cfd0e17eac617befe7e4182bc5137dc1e\");\r\nrouterAddress.set(ChainId.MAINNET, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\r\nrouterAddress.set(ChainId.ROPSTEN, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\r\nrouterAddress.set(ChainId.RINKEBY, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\r\nrouterAddress.set(ChainId.GÖRLI, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\r\nrouterAddress.set(ChainId.KOVAN, \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\r\nrouterAddress.set(ChainId.DEVNET, \"0x04e555283D37aE85F6eB311fe2578F3B3f3dFc52\");\r\nrouterAddress.set(ChainId.AUTONITY, \"0x04e555283D37aE85F6eB311fe2578F3B3f3dFc52\");\r\nrouterAddress.set(ChainId.PARASTATE, \"0x07a1905D44feeA439ceFAabd11a63bEf684abE11\");\r\nrouterAddress.set(ChainId.GANCHE, \"0x0F44AC51198D8F99847db6C431448dBC673428f1\");\r\n\r\n","import * as chains from './chains';\r\n\r\n// If you add coins for a new network, make sure Weth address (for the router you are using) is the first entry\r\n\r\nconst XRPLcoins = [\r\n  {\r\n    name: \"XRP\",\r\n    abbr: \"XRP\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"LOL Token\",\r\n    abbr: \"LOL\",\r\n    address: \"0x57ee425952c44618bdf9751317f2096bacc05341\",\r\n  },\r\n  {\r\n    name: \"cookieUSD\",\r\n    abbr: \"cUSD\",\r\n    address: \"0x83e7b126c047424c3ed018357df0376b980060ec\",\r\n  }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AUTONITYCoins = [\r\n  {\r\n    name: \"Auton\",\r\n    abbr: \"AUT\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Newton\",\r\n    abbr: \"NEW\",\r\n    address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\",\r\n  },\r\n  {\r\n    name: \"Token A\",\r\n    abbr: \"TA\",\r\n    address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\",\r\n  },\r\n  {\r\n    name: \"Token B\",\r\n    abbr: \"TB\",\r\n    address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\",\r\n  },\r\n  {\r\n    name: \"Token C\",\r\n    abbr: \"TC\",\r\n    address: \"0x03c7D835CceE5d741b3f3D144eBfC5327925ECf9\",\r\n  },\r\n  {\r\n    name: \"Token D\",\r\n    abbr: \"TD\",\r\n    address: \"0x90636A8bb3AD4C2168EE20CF5E6183D827Da2E91\",\r\n  }\r\n]\r\n\r\nconst DEVNETCoins = [\r\n  {\r\n    name: \"Auton\",\r\n    abbr: \"AUT\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Newton\",\r\n    abbr: \"NEW\",\r\n    address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\",\r\n  },\r\n  {\r\n    name: \"Token A\",\r\n    abbr: \"TA\",\r\n    address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\",\r\n  },\r\n  {\r\n    name: \"Token B\",\r\n    abbr: \"TB\",\r\n    address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\",\r\n  }\r\n]\r\n\r\nconst PARASTATECoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Token A\",\r\n    abbr: \"TA\",\r\n    address: \"0x4EDFE8706Cefab9DCd52630adFFd00E9b93FF116\",\r\n  },\r\n  {\r\n    name: \"Token B\",\r\n    abbr: \"TB\",\r\n    address: \"0x4489D87C8440B19f11d63FA2246f943F492F3F5F\",\r\n  },\r\n  \r\n  {\r\n    name: \"Token C\",\r\n    abbr: \"TC\",\r\n    address: \"0x1d29BD2ACedBff15A59e946a4DE26d5257447727\",\r\n  },\r\n  {\r\n    name: \"Token D\",\r\n    abbr: \"TD\",\r\n    address: \"0xc108a13D00371520EbBeCc7DF5C8610C71F4FfbA\",\r\n  }\r\n]\r\n\r\nconst GANACHECoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Token A\",\r\n    abbr: \"TA\",\r\n    address: \"0xE8C4BE1Bd495c984dD83B683966B7B538d3Ea82C\",\r\n  },\r\n  {\r\n    name: \"Token B\",\r\n    abbr: \"TB\",\r\n    address: \"0x30988e63329713c3f3FeA1ca1B94D4Abb02F78C5\",\r\n  },\r\n  \r\n  {\r\n    name: \"Token C\",\r\n    abbr: \"TC\",\r\n    address: \"0x23b4ce07ef4e2378319E40CbC0cc95EAbCf8E419\",\r\n  },\r\n  {\r\n    name: \"Token D\",\r\n    abbr: \"TD\",\r\n    address: \"0x49Ec3915F4daB907f7C6F74Cf5110366FCCc81A5\",\r\n  }\r\n]\r\n\r\nconst MAINNETCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\r\n  },\r\n  {\r\n    name: \"Ampleforth\",\r\n    abbr: \"AMPL\",\r\n    address: \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\",\r\n  },\r\n  {\r\n    name: \"Wrapped BTC\",\r\n    abbr: \"WBTC\",\r\n    address: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\r\n  },\r\n  {\r\n    name: \"Fei USD\",\r\n    abbr: \"FEI\",\r\n    address: \"0x956F47F50A910163D8BF957Cf5846D573E7f87CA\",\r\n  },\r\n  {\r\n    name: \"frax\",\r\n    abbr: \"FRAX\",\r\n    address: \"0x853d955aCEf822Db058eb8505911ED77F175b99e\",\r\n  },\r\n  {\r\n    name: \"Frax Share\",\r\n    abbr: \"FXS\",\r\n    address: \"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0\",\r\n  },\r\n  {\r\n    name: \"renBTC\",\r\n    abbr: \"renBTC\",\r\n    address: \"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D\",\r\n  },\r\n  {\r\n    name: \"StakeWise\",\r\n    abbr: \"SWISE\",\r\n    address: \"0x48C3399719B582dD63eB5AADf12A40B4C3f52FA2\",\r\n  },\r\n]\r\n\r\nconst ROPSTENCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0xad6d458402f60fd3bd25163575031acdce07538d\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0x6ee856ae55b6e1a249f04cd3b947141bc146273c\",\r\n  },\r\n]\r\n\r\nconst KOVANCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0xc4375b7de8af5a38a93548eb8453a498222c4ff2\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0xf3e0d7bf58c5d455d31ef1c2d5375904df525105\",\r\n  },\r\n]\r\n\r\nconst RINKEBYCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0x95b58a6bff3d14b7db2f5cb5f0ad413dc2940658\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0x3b00ef435fa4fcff5c209a37d1f3dcff37c705ad\",\r\n  },\r\n]\r\n\r\nconst GÖRLICoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0x73967c6a0904aa032c103b4104747e88c566b1a2\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0x509ee0d083ddf8ac028f2a56731412edd63223b9\",\r\n  },\r\n]\r\n\r\nconst COINS = new Map();\r\nCOINS.set(chains.ChainId.XRPL, XRPLcoins);\r\nCOINS.set(chains.ChainId.MAINNET, MAINNETCoins);\r\nCOINS.set(chains.ChainId.ROPSTEN, ROPSTENCoins);\r\nCOINS.set(chains.ChainId.RINKEBY, RINKEBYCoins);\r\nCOINS.set(chains.ChainId.GÖRLI, GÖRLICoins);\r\nCOINS.set(chains.ChainId.KOVAN, KOVANCoins);\r\nCOINS.set(chains.ChainId.AUTONITY, AUTONITYCoins);\r\nCOINS.set(chains.ChainId.DEVNET, DEVNETCoins);\r\nCOINS.set(chains.ChainId.PARASTATE, PARASTATECoins);\r\nCOINS.set(chains.ChainId.GANCHE, GANACHECoins)\r\nexport default COINS\r\n","import { Contract, ethers } from \"ethers\";\r\nimport * as chains from \"./constants/chains\";\r\nimport COINS from \"./constants/coins\";\r\n\r\nconst ROUTER = require(\"./build/UniswapV2Router02.json\");\r\nconst ERC20 = require(\"./build/ERC20.json\");\r\nconst FACTORY = require(\"./build/IUniswapV2Factory.json\");\r\nconst PAIR = require(\"./build/IUniswapV2Pair.json\");\r\n\r\nexport function getProvider() {\r\n  return new ethers.providers.Web3Provider(window.ethereum);\r\n}\r\n\r\nexport function getSigner(provider) {\r\n  return provider.getSigner();\r\n}\r\n\r\nexport async function getNetwork(provider) {\r\n  const network = await provider.getNetwork();\r\n  return network.chainId;\r\n}\r\n\r\nexport function getRouter(address, signer) {\r\n  return new Contract(address, ROUTER.abi, signer);\r\n}\r\n\r\nexport async function checkNetwork(provider) {\r\n  const chainId = getNetwork(provider);\r\n  if (chains.networks.includes(chainId)){\r\n    return true\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getWeth(address, signer) {\r\n  return new Contract(address, ERC20.abi, signer);\r\n}\r\n\r\nexport function getFactory(address, signer) {\r\n  return new Contract(address, FACTORY.abi, signer);\r\n}\r\n\r\nexport async function getAccount() {\r\n  const accounts = await window.ethereum.request({\r\n    method: \"eth_requestAccounts\",\r\n  });\r\n\r\n  return accounts[0];\r\n}\r\n\r\n//This function checks if a ERC20 token exists for a given address\r\n//    `address` - The Ethereum address to be checked\r\n//    `signer` - The current signer\r\nexport function doesTokenExist(address, signer) {\r\n  try {\r\n    return new Contract(address, ERC20.abi, signer);\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function getDecimals(token) {\r\n  const decimals = await token.decimals().then((result) => {\r\n      return result;\r\n    }).catch((error) => {\r\n      console.log('No tokenDecimals function for this token, set to 0');\r\n      return 0;\r\n    });\r\n    return decimals;\r\n}\r\n\r\n// This function returns an object with 2 fields: `balance` which container's the account's balance in the particular token,\r\n// and `symbol` which is the abbreviation of the token name. To work correctly it must be provided with 4 arguments:\r\n//    `accountAddress` - An Ethereum address of the current user's account\r\n//    `address` - An Ethereum address of the token to check for (either a token or AUT)\r\n//    `provider` - The current provider\r\n//    `signer` - The current signer\r\nexport async function getBalanceAndSymbol(\r\n  accountAddress,\r\n  address,\r\n  provider,\r\n  signer,\r\n  weth_address,\r\n  coins\r\n) {\r\n  try {\r\n    if (address === weth_address) {\r\n      const balanceRaw = await provider.getBalance(accountAddress);\r\n\r\n      return {\r\n        balance: ethers.utils.formatEther(balanceRaw),\r\n        symbol: coins[0].abbr,\r\n      };\r\n    } else {\r\n      const token = new Contract(address, ERC20.abi, signer);\r\n      const tokenDecimals = await getDecimals(token);\r\n      const balanceRaw = await token.balanceOf(accountAddress);\r\n      const symbol = await token.symbol();\r\n\r\n      return {\r\n        balance: balanceRaw*10**(-tokenDecimals),\r\n        symbol: symbol,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.log ('The getBalanceAndSymbol function had an error!');\r\n    console.log (error)\r\n    return false;\r\n  }\r\n}\r\n\r\n// This function swaps two particular tokens / AUT, it can handle switching from AUT to ERC20 token, ERC20 token to AUT, and ERC20 token to ERC20 token.\r\n// No error handling is done, so any issues can be caught with the use of .catch()\r\n// To work correctly, there needs to be 7 arguments:\r\n//    `address1` - An Ethereum address of the token to trade from (either a token or AUT)\r\n//    `address2` - An Ethereum address of the token to trade to (either a token or AUT)\r\n//    `amount` - A float or similar number representing the value of address1's token to trade\r\n//    `routerContract` - The router contract to carry out this trade\r\n//    `accountAddress` - An Ethereum address of the current user's account\r\n//    `signer` - The current signer\r\nexport async function swapTokens(\r\n  address1,\r\n  address2,\r\n  amount,\r\n  routerContract,\r\n  accountAddress,\r\n  signer\r\n) {\r\n  const tokens = [address1, address2];\r\n  const time = Math.floor(Date.now() / 1000) + 200000;\r\n  const deadline = ethers.BigNumber.from(time);\r\n\r\n  const token1 = new Contract(address1, ERC20.abi, signer);\r\n  const tokenDecimals = await getDecimals(token1);\r\n  \r\n  const amountIn = ethers.utils.parseUnits(amount, tokenDecimals);\r\n  const amountOut = await routerContract.callStatic.getAmountsOut(\r\n    amountIn,\r\n    tokens\r\n  );\r\n\r\n  await token1.approve(routerContract.address, amountIn);\r\n  const wethAddress = await routerContract.WETH();\r\n\r\n  if (address1 === wethAddress) {\r\n    // Eth -> Token\r\n    await routerContract.swapExactETHForTokens(\r\n      amountOut[1],\r\n      tokens,\r\n      accountAddress,\r\n      deadline,\r\n      { value: amountIn }\r\n    );\r\n  } else if (address2 === wethAddress) {\r\n    // Token -> Eth\r\n    await routerContract.swapExactTokensForETH(\r\n      amountIn,\r\n      amountOut[1],\r\n      tokens,\r\n      accountAddress,\r\n      deadline\r\n    );\r\n  } else {\r\n    await routerContract.swapExactTokensForTokens(\r\n      amountIn,\r\n      amountOut[1],\r\n      tokens,\r\n      accountAddress,\r\n      deadline\r\n    );\r\n  }\r\n}\r\n\r\n//This function returns the conversion rate between two token addresses\r\n//    `address1` - An Ethereum address of the token to swaped from (either a token or AUT)\r\n//    `address2` - An Ethereum address of the token to swaped to (either a token or AUT)\r\n//    `amountIn` - Amount of the token at address 1 to be swaped from\r\n//    `routerContract` - The router contract to carry out this swap\r\nexport async function getAmountOut(\r\n  address1,\r\n  address2,\r\n  amountIn,\r\n  routerContract,\r\n  signer\r\n) {\r\n  try {\r\n    const token1 = new Contract(address1, ERC20.abi, signer);\r\n    const token1Decimals = await getDecimals(token1);\r\n\r\n    const token2 = new Contract(address2, ERC20.abi, signer);\r\n    const token2Decimals = await getDecimals(token2);\r\n\r\n    const values_out = await routerContract.getAmountsOut(\r\n      ethers.utils.parseUnits(String(amountIn), token1Decimals),\r\n      [address1, address2]\r\n    );\r\n    const amount_out = values_out[1]*10**(-token2Decimals);\r\n    console.log('amount out: ', amount_out)\r\n    return Number(amount_out);\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// This function calls the pair contract to fetch the reserves stored in a the liquidity pool between the token of address1 and the token\r\n// of address2. Some extra logic was needed to make sure that the results were returned in the correct order, as\r\n// `pair.getReserves()` would always return the reserves in the same order regardless of which order the addresses were.\r\n//    `address1` - An Ethereum address of the token to trade from (either a ERC20 token or AUT)\r\n//    `address2` - An Ethereum address of the token to trade to (either a ERC20 token or AUT)\r\n//    `pair` - The pair contract for the two tokens\r\nexport async function fetchReserves(address1, address2, pair, signer) {\r\n  try {\r\n\r\n    // Get decimals for each coin\r\n    const coin1 = new Contract(address1, ERC20.abi, signer);\r\n    const coin2 = new Contract(address2, ERC20.abi, signer);\r\n\r\n    const coin1Decimals = await getDecimals(coin1);\r\n    const coin2Decimals = await getDecimals(coin2);\r\n\r\n    // Get reserves\r\n    const reservesRaw = await pair.getReserves();\r\n\r\n    // Put the results in the right order\r\n    const results =  [\r\n      (await pair.token0()) === address1 ? reservesRaw[0] : reservesRaw[1],\r\n      (await pair.token1()) === address2 ? reservesRaw[1] : reservesRaw[0],\r\n    ];\r\n\r\n    // Scale each to the right decimal place\r\n    return [\r\n      (results[0]*10**(-coin1Decimals)),\r\n      (results[1]*10**(-coin2Decimals))\r\n    ]\r\n  } catch (err) {\r\n    console.log(\"error!\");\r\n    console.log(err);\r\n    return [0, 0];\r\n  }\r\n}\r\n\r\n// This function returns the reserves stored in a the liquidity pool between the token of address1 and the token\r\n// of address2, as well as the liquidity tokens owned by accountAddress for that pair.\r\n//    `address1` - An Ethereum address of the token to trade from (either a token or AUT)\r\n//    `address2` - An Ethereum address of the token to trade to (either a token or AUT)\r\n//    `factory` - The current factory\r\n//    `signer` - The current signer\r\nexport async function getReserves(\r\n  address1,\r\n  address2,\r\n  factory,\r\n  signer,\r\n  accountAddress\r\n) {\r\n  try {\r\n    const pairAddress = await factory.getPair(address1, address2);\r\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\r\n  \r\n    if (pairAddress !== '0x0000000000000000000000000000000000000000'){\r\n  \r\n      const reservesRaw = await fetchReserves(address1, address2, pair, signer);\r\n      const liquidityTokens_BN = await pair.balanceOf(accountAddress);\r\n      const liquidityTokens = Number(\r\n        ethers.utils.formatEther(liquidityTokens_BN)\r\n      );\r\n    \r\n      return [\r\n        reservesRaw[0].toPrecision(6),\r\n        reservesRaw[1].toPrecision(6),\r\n        liquidityTokens,\r\n      ];\r\n    } else {\r\n      console.log(\"no reserves yet\");\r\n      return [0,0,0];\r\n    }\r\n  }catch (err) {\r\n    console.log(\"error!\");\r\n    console.log(err);\r\n    return [0, 0, 0];\r\n  }\r\n}\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { Contract, ethers } from \"ethers\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport ConnectWalletPage from \"./Components/connectWalletPage\";\r\nimport {\r\n  getAccount,\r\n  getFactory,\r\n  getRouter,\r\n  getNetwork,\r\n  getWeth,\r\n} from \"./ethereumFunctions\";\r\nimport COINS from \"./constants/coins\";\r\nimport * as chains from \"./constants/chains\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#6622CC\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#9e9e9e\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst autoReconnectDelay = 5000;\r\n\r\nconst Web3Provider = (props) => {\r\n  const [isConnected, setConnected] = useState(true);\r\n  let network = Object.create( {} )\r\n  network.provider = useRef(null);\r\n  network.signer = useRef(null);\r\n  network.account = useRef(null);\r\n  network.coins = [];\r\n  network.chainID = useRef(null);\r\n  network.router = useRef(null);\r\n  network.factory = useRef(null);\r\n  network.weth = useRef(null);\r\n  const backgroundListener = useRef(null);\r\n  async function setupConnection() {\r\n    try {\r\n      console.log('lets go!');\r\n      network.provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      network.signer = await network.provider.getSigner();\r\n      await getAccount().then(async (result) => {\r\n        network.account = result;\r\n      });\r\n\r\n      await getNetwork(network.provider).then(async (chainId) => {\r\n        // Set chainID\r\n        network.chainID = chainId;\r\n        if (chains.networks.includes(chainId)) {\r\n          // Get the router using the chainID\r\n          network.router = await getRouter(\r\n            chains.routerAddress.get(chainId),\r\n            network.signer\r\n          );\r\n          // Get default coins for network\r\n          network.coins = COINS.get(chainId);\r\n          // Get Weth address from router\r\n          await network.router.WETH().then((wethAddress) => {\r\n            network.weth = getWeth(wethAddress, network.signer);\r\n            // Set the value of the weth address in the default coins array\r\n            network.coins[0].address = wethAddress;\r\n          });\r\n          // Get the factory address from the router\r\n          await network.router.factory().then((factory_address) => {\r\n            network.factory = getFactory(\r\n              factory_address,\r\n              network.signer\r\n            );\r\n          });\r\n          setConnected(true);\r\n        } else {\r\n          console.log(\"Wrong network mate.\");\r\n          setConnected(false);\r\n        }\r\n      });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async function createListener() {\r\n    return setInterval(async () => {\r\n      // console.log(\"Heartbeat\");\r\n      try {\r\n        // Check the account has not changed\r\n        const account = await getAccount();\r\n        if (account != network.account) {\r\n          await setupConnection();\r\n        }\r\n        // const chainID = await getNetwork(network.provider);\r\n        // if (chainID !== network.chainID){\r\n        //   setConnected(false);\r\n        //   await setupConnection();\r\n        // }\r\n      } catch (e) {\r\n        setConnected(false);\r\n        await setupConnection();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    // Initial setup\r\n    console.log(\"Initial hook\");\r\n    await setupConnection();\r\n    console.log(\"network: \", network);\r\n\r\n    // Start background listener\r\n    if (backgroundListener.current != null) {\r\n      clearInterval(backgroundListener.current);\r\n    }\r\n    const listener = createListener();\r\n    backgroundListener.current = listener;\r\n    return () => clearInterval(backgroundListener.current);\r\n  }, []);\r\n\r\n  const renderNotConnected = () => {\r\n    console.log(\"Rendering\");\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <ConnectWalletPage />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isConnected && renderNotConnected()}\r\n      {isConnected && <div> {props.render(network)}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Web3Provider;\r\n","export const MenuItems = [\r\n  {\r\n    title: \"Swap\",\r\n    url: \"/CookieSwap/\",\r\n    cName: \"nav-links\",\r\n  },\r\n  {\r\n    title: \"Liquidity\",\r\n    url: \"/CookieSwap/liquidity\",\r\n    cName: \"nav-links\",\r\n  },\r\n  \r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport \"./NavBar.css\";\r\n\r\nclass NavBar extends Component {\r\n  state = { clicked: false };\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className=\"Title\">\r\n          <h1 className=\"navbar-logo\">\r\n            CookieSwap 🍪\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"NavbarItems\">\r\n          <ul className={`nav-menu`}>\r\n            {MenuItems.map((item, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <Link className={\"nav-links\"} to={item.url}>\r\n                    {item.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Fab, Grid, InputBase, makeStyles } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as COLORS from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(1),\r\n    minHeight: \"50px\",\r\n    backgroundColor: \"#8D7FB9\",\r\n    borderRadius: theme.spacing(1),\r\n    borderColor: COLORS.grey[300],\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\",\r\n    color:\"#ffffff\",\r\n  },\r\n  container_input: {\r\n    padding: theme.spacing(1),\r\n    minHeight: \"50px\",\r\n    backgroundColor: \"#9e9e9e\",\r\n    borderRadius: theme.spacing(1),\r\n    borderColor: COLORS.grey[300],\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\",\r\n    marginLeft: \"50%\",\r\n    textAlign: \"right\",\r\n    color:\"#ffffff\",\r\n  },\r\n  container_blank: {\r\n    padding: theme.spacing(1),\r\n    minHeight: \"80px\",\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n  grid: {\r\n    height: \"50px\",\r\n  },\r\n  fab: {\r\n    zIndex: \"0\",\r\n  },\r\n  input: {\r\n    ...theme.typography.h5,\r\n    width: \"100%\",\r\n    color: \"#ffffff\",\r\n  },\r\n  inputBase: {\r\n    textAlign: \"right\",\r\n  },\r\n}));\r\n\r\nCoinField.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  symbol: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  activeField: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function RemoveLiquidityField1(props) {\r\n  // This component is used to selecting a coin and entering a value, the props are explained below:\r\n  //      onClick - (string) => void - Called when the button is clicked\r\n  //      symbol - string - The text displayed on the button\r\n  //      value - string - The value of the text field\r\n  //      onChange - (e) => void - Called when the text field changes\r\n  //      activeField - boolean - Whether text can be entered into this field or not\r\n\r\n  const classes = useStyles();\r\n  const { onClick, symbol, value, onChange, activeField } = props;\r\n  return (\r\n    <div className={classes.container_blank}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.grid}\r\n      >\r\n        {/* Button */}\r\n        <Grid item xs={3}>\r\n          <Fab\r\n            size=\"small\"\r\n            variant=\"extended\"\r\n            onClick={onClick}\r\n            className={classes.fab}\r\n          >\r\n            {symbol}\r\n            <ExpandMoreIcon />\r\n          </Fab>\r\n        </Grid>\r\n        {/* Text Field */}\r\n        <Grid item xs={9}>\r\n          <InputBase\r\n            value={value}\r\n            onChange={onChange}\r\n            placeholder=\"0.0\"\r\n            disabled={!activeField}\r\n            classes={{\r\n              root: classes.container_input,\r\n              input: classes.inputBase,\r\n            }}\r\n          />\r\n        </Grid>\r\n        {/* </div> */}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function RemoveLiquidityField2(props) {\r\n  // This component is used to selecting a coin and entering a value, the props are explained below:\r\n  //      onClick - (string) => void - Called when the button is clicked\r\n  //      symbol - string - The text displayed on the button\r\n  //      value - string - The value of the text field\r\n  //      onChange - (e) => void - Called when the text field changes\r\n  //      activeField - boolean - Whether text can be entered into this field or not\r\n\r\n  const classes = useStyles();\r\n  const { onClick, symbol } = props;\r\n\r\n  return (\r\n    <div className={classes.container_blank}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.grid}\r\n      >\r\n        {/* Button */}\r\n        <Grid item xs={3}>\r\n          <Fab\r\n            size=\"small\"\r\n            variant=\"extended\"\r\n            onClick={onClick}\r\n            className={classes.fab}\r\n          >\r\n            {symbol}\r\n            <ExpandMoreIcon />\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoinField(props) {\r\n  // This component is used to selecting a token and entering a value, the props are explained below:\r\n  //      onClick - (string) => void - Called when the button is clicked\r\n  //      symbol - string - The text displayed on the button\r\n  //      value - string - The value of the text field\r\n  //      onChange - (e) => void - Called when the text field changes\r\n  //      activeField - boolean - Whether text can be entered into this field or not\r\n\r\n  const classes = useStyles();\r\n  const { onClick, symbol, value, onChange, activeField } = props;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.grid}\r\n      >\r\n        {/* Button */}\r\n        <Grid item xs={3}>\r\n          <Fab\r\n            size=\"small\"\r\n            variant=\"extended\"\r\n            onClick={onClick}\r\n            className={classes.fab}\r\n          >\r\n            {symbol}\r\n            <ExpandMoreIcon />\r\n          </Fab>\r\n        </Grid>\r\n\r\n        {/* Text Field */}\r\n        <Grid item xs={9}>\r\n          <InputBase\r\n            value={value}\r\n            onChange={onChange}\r\n            placeholder=\"0.0\"\r\n            disabled={!activeField}\r\n            classes={{ root: classes.input, input: classes.inputBase }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ButtonBase, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as COLORS from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    width: \"100%\",\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingBottom: theme.spacing(0.5),\r\n    \"&:hover, &$focusVisible\": {\r\n      backgroundColor: \"#F621C1\",\r\n    },\r\n  },\r\n  coinName: {\r\n    opacity: 0.9,\r\n  },\r\n}));\r\n\r\nCoinButton.propTypes = {\r\n  coinName: PropTypes.string.isRequired,\r\n  coinAbbr: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function CoinButton(props) {\r\n  const { coinName, coinAbbr, onClick, ...other } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ButtonBase focusRipple className={classes.button} onClick={onClick}>\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{coinAbbr}</Typography>\r\n        <Typography variant=\"body2\" className={classes.coinName}>\r\n          {coinName}\r\n        </Typography>\r\n      </Grid>\r\n    </ButtonBase>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CoinButton from \"./CoinButton\";\r\nimport { doesTokenExist } from \"../ethereumFunctions\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as COLORS from \"@material-ui/core/colors\";\r\n\r\nconst styles = (theme) => ({\r\n  dialogContainer: {\r\n    borderRadius: theme.spacing(6),\r\n    backgroundColor: \"#6622CC\",\r\n    color: \"#ffffff\",\r\n  },\r\n  titleSection: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  titleText: {\r\n    alignSelf: \"center\",\r\n  },\r\n  hr: {\r\n    margin: 0,\r\n  },\r\n  address: {\r\n    paddingLeft: theme.spacing(2.5),\r\n    paddingRight: theme.spacing(2.5),\r\n    paddingBottom: theme.spacing(2),\r\n    color: \"#ffffff\",\r\n  },\r\n  coinList: {\r\n    height: \"300px\",\r\n    overflowY: \"auto\",\r\n  },\r\n  coinContainer: {\r\n    paddingLeft: theme.spacing(0.5),\r\n    paddingRight: theme.spacing(0.5),\r\n    paddingTop: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    overflow: \"hidden\",\r\n\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n// This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle\r\n      disableTypography\r\n      className={classes.titleSection}\r\n      {...other}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n      >\r\n        <Typography variant=\"h6\" className={classes.titleText}>\r\n          {children}\r\n        </Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </Grid>\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n// This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n    backgroundColor: COLORS.grey[100],\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nCoinDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  coins: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function CoinDialog(props) {\r\n  // The CoinDialog component will display a dialog window on top of the page, allowing a user to select a coin\r\n  // from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\r\n  // addresses will first be validated to make sure they exist.\r\n  // When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\r\n  // user closes the dialog without selecting anything), or will be a string containing the address of a coin.\r\n\r\n  const classes = useStyles();\r\n  const { onClose, open, coins, signer, ...others } = props;\r\n\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n\r\n  // Called when the user tries to input a custom address, this function will validate the address and will either\r\n  // then close the dialog and return the validated address, or will display an error.\r\n  const submit = () => {\r\n    if (doesTokenExist(address, signer)) {\r\n      exit(address);\r\n    } else {\r\n      setError(\"This address is not valid\");\r\n    }\r\n  };\r\n\r\n  // Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\r\n  const exit = (value) => {\r\n    setError(\"\");\r\n    setAddress(\"\");\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => exit(undefined)}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      classes={{ paper: classes.dialogContainer }}\r\n    >\r\n      <DialogTitle onClose={() => exit(undefined)}>Select Coin</DialogTitle>\r\n\r\n      <hr className={classes.hr} />\r\n\r\n      <div className={classes.coinContainer}>\r\n        <Grid container direction=\"column\" spacing={1} alignContent=\"center\">\r\n          <TextField\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            variant=\"outlined\"\r\n            placeholder=\"Paste Address\"\r\n            error={error !== \"\"}\r\n            helperText={error}\r\n            fullWidth\r\n            className={classes.address}\r\n          />\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          <Grid item className={classes.coinList}>\r\n            <Grid container direction=\"column\">\r\n              {/* Maps all of the tokens in the constants file to buttons */}\r\n              {coins.map((coin, index) => (\r\n                <Grid item key={index} xs={12}>\r\n                  <CoinButton\r\n                    coinName={coin.name}\r\n                    coinAbbr={coin.abbr}\r\n                    onClick={() => exit(coin.address)}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <hr className={classes.hr} />\r\n\r\n      <DialogActions className={classes.address}>\r\n        <Button autoFocus onClick={submit} color=\"primary\">\r\n          Enter\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: 0,\r\n    position: \"relative\",\r\n  },\r\n  progress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function LoadingButton(props) {\r\n  const classes = useStyles();\r\n  const { children, loading, valid, success, fail, onClick, ...other } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        disabled={loading || !valid}\r\n        type=\"submit\"\r\n        onClick={onClick}\r\n        {...other}\r\n      >\r\n        {children}\r\n      </Button>\r\n      {loading && <CircularProgress size={24} className={classes.progress} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = (theme) => ({\r\n  dialogContainer: {\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function WrongNetwork(props) {\r\n\r\n  const classes = useStyles();\r\n  const {open} = props;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      classes={{ paper: classes.dialogContainer }}\r\n    >\r\n      <MuiDialogTitle>Unsupported Network</MuiDialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport {\r\n  getAccount,\r\n  getFactory,\r\n  getProvider,\r\n  getRouter,\r\n  getSigner,\r\n  getNetwork,\r\n  getAmountOut,\r\n  getBalanceAndSymbol,\r\n  getWeth,\r\n  swapTokens,\r\n  getReserves,\r\n} from \"../ethereumFunctions\";\r\nimport CoinField from \"./CoinField\";\r\nimport CoinDialog from \"./CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\nimport COINS from \"../constants/coins\";\r\nimport * as chains from \"../constants/chains\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    backgroundColor: \"#F2E3EA\",\r\n    color: \"#11002f\",\r\n  },\r\n  switchButton: {\r\n    zIndex: 1,\r\n    margin: \"-16px\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(0),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    marginTop: \"10px\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CoinSwapper(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(field2Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      !isNaN(parsedInput1) &&\r\n      !isNaN(parsedInput2) &&\r\n      0 < parsedInput1 &&\r\n      parsedInput1 <= coin1.balance\r\n    );\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\r\n  const swap = () => {\r\n    console.log(\"Attempting to swap tokens...\");\r\n    setLoading(true);\r\n\r\n    swapTokens(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        enqueueSnackbar(\"Transaction Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Transaction Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\r\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\r\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\r\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\r\n  // of the two coins change.\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address) {\r\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(\r\n        (data) => setReserves(data)\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.router, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\r\n  // It attempts to calculate and set the state variable `field2Value`\r\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\r\n  // the value in the output box will change.\r\n  useEffect(() => {\r\n    if (isNaN(parseFloat(field1Value))) {\r\n      setField2Value(\"\");\r\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\r\n      getAmountOut(coin1.address, coin2.address, field1Value, props.network.router, props.network.signer).then(\r\n        (amount) => setField2Value(amount.toFixed(7))\r\n      ).catch(e => {\r\n        console.log(e);\r\n        setField2Value(\"NA\");\r\n      })\r\n    } else {\r\n      setField2Value(\"\");\r\n    }\r\n  }, [field1Value, coin1.address, coin2.address]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log('props: ', props);\r\n      console.log(\"Checking balances...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => setReserves(data));\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={props.network.coins}\r\n        props={props.network.signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n        />\r\n\r\n      {/* Coin Swapper */}\r\n      <Container maxWidth=\"xs\">\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Swap Coins\r\n          </Typography>\r\n\r\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={12} className={classes.fullWidth}>\r\n              <CoinField\r\n                activeField={true}\r\n                value={field1Value}\r\n                onClick={() => setDialog1Open(true)}\r\n                onChange={handleChange.field1}\r\n                symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n              />\r\n            </Grid>\r\n\r\n            <IconButton onClick={switchFields} className={classes.switchButton}>\r\n              <SwapVerticalCircleIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n\r\n            <Grid item xs={12} className={classes.fullWidth}>\r\n              <CoinField\r\n                activeField={false}\r\n                value={field2Value}\r\n                onClick={() => setDialog2Open(true)}\r\n                symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n              />\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Balance Display */}\r\n            <Typography variant=\"h6\">Your Balances</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(coin1.balance, coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(coin2.balance, coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Reserves Display */}\r\n            <Typography variant=\"h6\">Reserves</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(reserves[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(reserves[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            <LoadingButton\r\n              loading={loading}\r\n              valid={isButtonEnabled()}\r\n              success={false}\r\n              fail={false}\r\n              onClick={swap}\r\n            >\r\n              <LoopIcon />\r\n              Swap\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n\r\n      <Grid\r\n        container\r\n        className={classes.footer}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <p  class=\"footer-text\">\r\n          CookieSwap | By: @{\"\"}\r\n          <a class=\"footer-link\" href=\"https://twitter.com/hazardcookie\">hazardcookie</a>\r\n        </p>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoinSwapper;","import React from \"react\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\";\r\n\r\nexport default function SwitchButton(props) {\r\n  const { setDeploy } = props;\r\n\r\n  const changeStyles = (K) => {\r\n    if (K === true) {\r\n      let add_button = document.getElementById(\"add-button\");\r\n      add_button.style.backgroundColor = \"#6622CC\";\r\n\r\n      let remove_button = document.getElementById(\"remove-button\");\r\n      remove_button.style.backgroundColor = \"#9e9e9e\";\r\n    } else {\r\n      let remove_button = document.getElementById(\"remove-button\");\r\n      remove_button.style.backgroundColor = \"#6622CC\";\r\n\r\n      let add_button = document.getElementById(\"add-button\");\r\n      add_button.style.backgroundColor = \"#9e9e9e\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ButtonGroup size=\"large\" variant=\"contained\">\r\n        <Button\r\n          id=\"add-button\"\r\n          color=\"primary\"\r\n          text=\"white\"\r\n          onClick={() => {\r\n            setDeploy(true);\r\n            changeStyles(true);\r\n          }}\r\n        >\r\n          Deploy Liquidity\r\n        </Button>\r\n\r\n        <Button\r\n          id=\"remove-button\"\r\n          color=\"secondary\"\r\n          text=\"white\"\r\n          onClick={() => {\r\n            setDeploy(false);\r\n            changeStyles(false);\r\n          }}\r\n        >\r\n          Remove Liquidity\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","import {Contract, ethers} from \"ethers\";\r\nimport {fetchReserves, getDecimals} from \"../ethereumFunctions\";\r\n\r\nconst ERC20 = require(\"../build/ERC20.json\");\r\nconst PAIR = require(\"../build/IUniswapV2Pair.json\");\r\n\r\n// Function used to add Liquidity to any pair of tokens or token-AUT\r\n// To work correctly, there needs to be 9 arguments:\r\n//    `address1` - An Ethereum address of the coin to add from (either a token or AUT)\r\n//    `address2` - An Ethereum address of the coin to add to (either a token or AUT)\r\n//    `amount1` - A float or similar number representing the value of address1's coin to add\r\n//    `amount2` - A float or similar number representing the value of address2's coin to add\r\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to add\r\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to add\r\n//    `routerContract` - The router contract to carry out this trade\r\n//    `accountAddress` - An Ethereum address of the current user's account\r\n//    `provider` - The current provider\r\n//    `signer` - The current signer\r\nexport async function addLiquidity(address1, address2, amount1, amount2, amount1min, amount2min, routerContract, account, signer) {\r\n    const token1 = new Contract(address1, ERC20.abi, signer);\r\n    const token2 = new Contract(address2, ERC20.abi, signer);\r\n\r\n    const token1Decimals = await getDecimals(token1);\r\n    const token2Decimals = await getDecimals(token2);\r\n\r\n    const amountIn1 = ethers.utils.parseUnits(amount1, token1Decimals);\r\n    const amountIn2 = ethers.utils.parseUnits(amount2, token2Decimals);\r\n\r\n    const amount1Min = ethers.utils.parseUnits(amount1min, token1Decimals);\r\n    const amount2Min = ethers.utils.parseUnits(amount2min, token2Decimals);\r\n\r\n    const time = Math.floor(Date.now() / 1000) + 200000;\r\n    const deadline = ethers.BigNumber.from(time);\r\n\r\n    await token1.approve(routerContract.address, amountIn1);\r\n    await token2.approve(routerContract.address, amountIn2);\r\n\r\n    const wethAddress = await routerContract.WETH();\r\n\r\n    console.log([\r\n        address1,\r\n        address2,\r\n        amountIn1,\r\n        amountIn2,\r\n        amount1Min,\r\n        amount2Min,\r\n        account,\r\n        deadline,\r\n    ]);\r\n\r\n    if (address1 === wethAddress) { // Eth + Token\r\n        await routerContract.addLiquidityETH(address2, amountIn2, amount2Min, amount1Min, account, deadline, {\r\n            value: amountIn1,\r\n            gasLimit: 10000000,\r\n            gasPrice: ethers.utils.parseUnits(\"10\", \"gwei\")\r\n        });\r\n    } else if (address2 === wethAddress) { // Token + Eth\r\n        await routerContract.addLiquidityETH(address1, amountIn1, amount1Min, amount2Min, account, deadline, {\r\n            value: amountIn2,\r\n            gasLimit: 10000000,\r\n            gasPrice: ethers.utils.parseUnits(\"10\", \"gwei\")\r\n        });\r\n    } else { // Token + Token\r\n        await routerContract.addLiquidity(address1, address2, amountIn1, amountIn2, amount1Min, amount2Min, account, deadline, {\r\n            gasLimit: 10000000,\r\n            gasPrice: ethers.utils.parseUnits(\"10\", \"gwei\")\r\n        });\r\n    }\r\n}\r\n\r\n// Function used to remove Liquidity from any pair of tokens or token-AUT\r\n// To work correctly, there needs to be 9 arguments:\r\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\r\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\r\n//    `liquidity_tokens` - A float or similar number representing the value of liquidity tokens you will burn to get tokens back\r\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to recieve\r\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to recieve\r\n//    `routerContract` - The router contract to carry out this trade\r\n//    `accountAddress` - An Ethereum address of the current user's account\r\n//    `provider` - The current provider\r\n//    `signer` - The current signer\r\nexport async function removeLiquidity(address1, address2, liquidity_tokens, amount1min, amount2min, routerContract, account, signer, factory) {\r\n    const token1 = new Contract(address1, ERC20.abi, signer);\r\n    const token2 = new Contract(address2, ERC20.abi, signer);\r\n\r\n    const token1Decimals = await getDecimals(token1);\r\n    const token2Decimals = await getDecimals(token2);\r\n\r\n    const Getliquidity = (liquidity_tokens) => {\r\n        if (liquidity_tokens < 0.001) {\r\n            return ethers.BigNumber.from(liquidity_tokens * 10 ** 18);\r\n        }\r\n        return ethers.utils.parseUnits(String(liquidity_tokens), 18);\r\n    }\r\n\r\n    const liquidity = Getliquidity(liquidity_tokens);\r\n    console.log('liquidity: ', liquidity);\r\n\r\n    const amount1Min = ethers.utils.parseUnits(String(amount1min), token1Decimals);\r\n    const amount2Min = ethers.utils.parseUnits(String(amount2min), token2Decimals);\r\n\r\n    const time = Math.floor(Date.now() / 1000) + 200000;\r\n    const deadline = ethers.BigNumber.from(time);\r\n\r\n    const wethAddress = await routerContract.WETH();\r\n    const pairAddress = await factory.getPair(address1, address2);\r\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\r\n\r\n    await pair.approve(routerContract.address, liquidity);\r\n\r\n    console.log([\r\n        address1,\r\n        address2,\r\n        Number(liquidity),\r\n        Number(amount1Min),\r\n        Number(amount2Min),\r\n        account,\r\n        deadline,\r\n    ]);\r\n\r\n    if (address1 === wethAddress) { // Eth + Token\r\n        await routerContract.removeLiquidityETH(address2, liquidity, amount2Min, amount1Min, account, deadline);\r\n    } else if (address2 === wethAddress) { // Token + Eth\r\n        await routerContract.removeLiquidityETH(address1, liquidity, amount1Min, amount2Min, account, deadline);\r\n    } else { // Token + Token\r\n        await routerContract.removeLiquidity(address1, address2, liquidity, amount1Min, amount2Min, account, deadline);\r\n    }\r\n}\r\n\r\nconst quote = (amount1, reserve1, reserve2) => {\r\n    const amount2 = amount1 * (reserve2 / reserve1);\r\n    return [amount2];\r\n};\r\n\r\n// Function used to get a quote of the liquidity addition\r\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\r\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\r\n//    `amountA_desired` - The prefered value of the first token that the user would like to deploy as liquidity\r\n//    `amountB_desired` - The prefered value of the second token that the user would like to deploy as liquidity\r\n//    `factory` - The current factory\r\n//    `signer` - The current signer\r\n\r\nasync function quoteMintLiquidity(address1, address2, amountA, amountB, factory, signer) {\r\n    const MINIMUM_LIQUIDITY = 1000;\r\n    let _reserveA = 0;\r\n    let _reserveB = 0;\r\n    let totalSupply = 0;\r\n    [_reserveA, _reserveB, totalSupply] = await factory.getPair(address1, address2).then(async (pairAddress) => {\r\n        if (pairAddress !== '0x0000000000000000000000000000000000000000') {\r\n            const pair = new Contract(pairAddress, PAIR.abi, signer);\r\n\r\n            const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\r\n            const reserveA = reservesRaw[0];\r\n            const reserveB = reservesRaw[1];\r\n\r\n            const _totalSupply = await pair.totalSupply();\r\n            const totalSupply = Number(ethers.utils.formatEther(_totalSupply));\r\n            return [reserveA, reserveB, totalSupply]\r\n        } else {\r\n            return [0, 0, 0]\r\n        }\r\n    });\r\n\r\n    const token1 = new Contract(address1, ERC20.abi, signer);\r\n    const token2 = new Contract(address2, ERC20.abi, signer);\r\n\r\n    // Need to do all this decimals work to account for 0 decimal numbers\r\n\r\n    const token1Decimals = await getDecimals(token1);\r\n    const token2Decimals = await getDecimals(token2);\r\n\r\n    const valueA = amountA * (10 ** token1Decimals);\r\n    const valueB = amountB * (10 ** token2Decimals);\r\n\r\n    const reserveA = _reserveA * (10 ** token1Decimals);\r\n    const reserveB = _reserveB * (10 ** token2Decimals);\r\n\r\n    if (totalSupply == 0) {\r\n        return Math.sqrt(((valueA * valueB) - MINIMUM_LIQUIDITY)) * 10 ** (-18);\r\n    };\r\n\r\n    return(Math.min(valueA * totalSupply / reserveA, valueB * totalSupply / reserveB));\r\n};\r\n\r\nexport async function quoteAddLiquidity(address1, address2, amountADesired, amountBDesired, factory, signer) {\r\n\r\n    const pairAddress = await factory.getPair(address1, address2);\r\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\r\n\r\n    const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\r\n    const reserveA = reservesRaw[0];\r\n    const reserveB = reservesRaw[1];\r\n\r\n    if (reserveA === 0 && reserveB === 0) {\r\n        const amountOut = await quoteMintLiquidity(address1, address2, amountADesired, amountBDesired, factory, signer);\r\n        return [amountADesired, amountBDesired, amountOut.toPrecision(8),];\r\n    } else {\r\n        const amountBOptimal = quote(amountADesired, reserveA, reserveB);\r\n        if (amountBOptimal <= amountBDesired) {\r\n            const amountOut = await quoteMintLiquidity(address1, address2, amountADesired, amountBOptimal, factory, signer);\r\n            return [amountADesired, amountBOptimal, amountOut.toPrecision(8),];\r\n        } else {\r\n            const amountAOptimal = quote(amountBDesired, reserveB, reserveA);\r\n            const amountOut = await quoteMintLiquidity(address1, address2, amountAOptimal, amountBDesired, factory, signer);\r\n            return [amountAOptimal, amountBDesired, amountOut.toPrecision(8),];\r\n        }\r\n    }\r\n}\r\n\r\n// Function used to get a quote of the liquidity removal\r\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\r\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\r\n//    `liquidity` - The amount of liquidity tokens the user will burn to get their tokens back\r\n//    `factory` - The current factory\r\n//    `signer` - The current signer\r\n\r\nexport async function quoteRemoveLiquidity(address1, address2, liquidity, factory, signer) {\r\n    const pairAddress = await factory.getPair(address1, address2);\r\n    console.log(\"pair address\", pairAddress);\r\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\r\n\r\n    const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\r\n    const reserveA = reservesRaw[0];\r\n    const reserveB = reservesRaw[1];\r\n\r\n    const feeOn = (await factory.feeTo()) !== 0x0000000000000000000000000000000000000000;\r\n\r\n    const _kLast = await pair.kLast();\r\n    const kLast = Number(ethers.utils.formatEther(_kLast));\r\n\r\n    const _totalSupply = await pair.totalSupply();\r\n    let totalSupply = Number(ethers.utils.formatEther(_totalSupply));\r\n\r\n    if (feeOn && kLast > 0) {\r\n        const feeLiquidity = (totalSupply * (Math.sqrt(reserveA * reserveB) - Math.sqrt(kLast))) / (5 * Math.sqrt(reserveA * reserveB) + Math.sqrt(kLast));\r\n        totalSupply = totalSupply + feeLiquidity;\r\n    }\r\n\r\n    const Aout = (reserveA * liquidity) / totalSupply;\r\n    const Bout = (reserveB * liquidity) / totalSupply;\r\n\r\n    return [liquidity, Aout, Bout];\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  getBalanceAndSymbol,\r\n  getReserves,\r\n} from \"../ethereumFunctions\";\r\n\r\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\r\n\r\nimport CoinField from \"../CoinSwapper/CoinField\";\r\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\nimport { solidityKeccak256 } from \"ethers/lib/utils\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    width: \"80%\",\r\n    overflow: \"wrap\",\r\n    background:  \"linear-gradient(45deg, #6622CC 30%, #A755C2 90%)\",\r\n    color: \"white\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  values: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n    background: \"#A755C2\",\r\n    borderTop: \"1px dashed #A755C2\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(0),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction LiquidityDeployer(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Stores the user's balance of liquidity tokens for the current pair\r\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\r\n\r\n  // Used when getting a quote of liquidity\r\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    let oldField1Value = field1Value;\r\n    let oldField2Value = field2Value;\r\n\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(oldField2Value);\r\n    setField2Value(oldField1Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n    field2: (e) => {\r\n      setField2Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      parsedInput1 !== NaN &&\r\n      0 < parsedInput1 &&\r\n      parsedInput2 !== NaN &&\r\n      0 < parsedInput2 &&\r\n      parsedInput1 <= coin1.balance &&\r\n      parsedInput2 <= coin2.balance\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const deploy = () => {\r\n    console.log(\"Attempting to deploy liquidity...\");\r\n    setLoading(true);\r\n\r\n    addLiquidity(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      field2Value,\r\n      '0',\r\n      '0',\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        setField2Value(\"\");\r\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(\r\n        props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address && props.network.account) {\r\n      getReserves(\r\n        coin1.address,\r\n        coin2.address,\r\n        props.network.factory,\r\n        props.network.signer,\r\n        props.network.account\r\n        ).then(\r\n        (data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        }\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\r\n  // It will give a preview of the liquidity deployment.\r\n  useEffect(() => {\r\n    if (isButtonEnabled()) {\r\n      console.log(\"Trying to preview the liquidity deployment\");\r\n\r\n      quoteAddLiquidity(\r\n        coin1.address,\r\n        coin2.address,\r\n        field1Value,\r\n        field2Value,\r\n        props.network.factory,\r\n        props.network.signer\r\n      ).then((data) => {\r\n        // console.log(data);\r\n        console.log(\"TokenA in: \", data[0]);\r\n        console.log(\"TokenB in: \", data[1]);\r\n        console.log(\"Liquidity out: \", data[2]);\r\n        setLiquidityOut([data[0], data[1], data[2]]);\r\n      });\r\n    }\r\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log(\"Checking balances & Getting reserves...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        });\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Liquidity deployer */}\r\n      <Typography variant=\"h5\" className={classes.title}></Typography>\r\n\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={props.network.coins}\r\n        signer={props.networksigner}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n      />\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field1Value}\r\n            onClick={() => setDialog1Open(true)}\r\n            onChange={handleChange.field1}\r\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field2Value}\r\n            onClick={() => setDialog2Open(true)}\r\n            onChange={handleChange.field2}\r\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        spacing={4}\r\n        className={classes.balance}\r\n      >\r\n        <hr className={classes.hr} />\r\n        <Grid\r\n          container\r\n          item\r\n          className={classes.values}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* Balance Display */}\r\n          <Typography variant=\"h6\">Your Balances</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin1.balance, coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin2.balance, coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Reserves Display */}\r\n          <Typography variant=\"h6\">Reserves</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[0], coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[1], coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Liquidity Tokens Display */}\r\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperContainer}>\r\n          {/*Red  Display to show the quote */}\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.fullWidth}\r\n          >\r\n            {/* Tokens in */}\r\n            <Typography variant=\"h6\">Tokens in</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Liquidity Tokens Display */}\r\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(liquidityOut[2], \"UNI-V2\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <hr className={classes.hr} />\r\n      </Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          valid={isButtonEnabled()}\r\n          success={false}\r\n          fail={false}\r\n          onClick={deploy}\r\n        >\r\n          <AccountBalanceIcon className={classes.buttonIcon} />\r\n          Deploy\r\n        </LoadingButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiquidityDeployer;\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  getBalanceAndSymbol,\r\n  getReserves,\r\n} from \"../ethereumFunctions\";\r\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\r\nimport {\r\n  RemoveLiquidityField1,\r\n  RemoveLiquidityField2,\r\n} from \"../CoinSwapper/CoinField\";\r\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    width: \"80%\",\r\n    overflow: \"wrap\",\r\n    background: \"linear-gradient(45deg, #6622CC 30%, #A755C2 90%)\",\r\n    color: \"white\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  values: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n    background: \"#A755C2\",\r\n    borderTop: \"1px dashed #A755C2\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(0),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n\r\n});\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction LiquidityRemover(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Stores the liquidity tokens balance of the user\r\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\r\n\r\n  // Stores the input and output for the liquidity removal preview\r\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\r\n    const parsedInput = parseFloat(field1Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      parsedInput !== NaN &&\r\n      0 < parsedInput &&\r\n      parsedInput <= liquidityTokens\r\n    );\r\n  };\r\n\r\n  const remove = () => {\r\n    console.log(\"Attempting to remove liquidity...\");\r\n    setLoading(true);\r\n\r\n    removeLiquidity(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      0,\r\n      0,\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer,\r\n      props.network.factory\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(\r\n        props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address && props.network.account) {\r\n      getReserves(\r\n        coin1.address,\r\n        coin2.address,\r\n        props.network.factory,\r\n        props.network.signer,\r\n        props.network.account).then(\r\n        (data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        }\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\r\n  // It will give a preview of the liquidity removal.\r\n  useEffect(() => {\r\n    if (isButtonEnabled()) {\r\n      console.log(\"Trying to preview the liquidity removal\");\r\n      quoteRemoveLiquidity(\r\n        coin1.address,\r\n        coin2.address,\r\n        field1Value,\r\n        props.network.factory,\r\n        props.network.signer\r\n      ).then((data) => {\r\n        setTokensOut(data);\r\n      });\r\n    }\r\n  }, [coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer]);\r\n\r\n  useEffect(() => {\r\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log(\"Checking balances & Getting reserves...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        });\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address, props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Coin Swapper */}\r\n      <Typography variant=\"h5\" className={classes.title}></Typography>\r\n\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n      />\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <RemoveLiquidityField1\r\n            activeField={true}\r\n            value={field1Value}\r\n            onClick={() => setDialog1Open(true)}\r\n            onChange={handleChange.field1}\r\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <RemoveLiquidityField2\r\n            activeField={true}\r\n            onClick={() => setDialog2Open(true)}\r\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        spacing={4}\r\n        className={classes.balance}\r\n      >\r\n        <hr className={classes.hr} />\r\n        <Grid\r\n          container\r\n          item\r\n          className={classes.values}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* Balance Display */}\r\n          <Typography variant=\"h6\">Your Balances</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin1.balance, coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin2.balance, coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Reserves Display */}\r\n          <Typography variant=\"h6\">Reserves</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[0], coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[1], coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Liquidity Tokens Display */}\r\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper className={classes.paperContainer}>\r\n          {/*Red  Display to show the quote */}\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.fullWidth}\r\n          >\r\n            {/* Tokens in */}\r\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(tokensOut[0], \"UNI-V2\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Liquidity Tokens Display */}\r\n            <Typography variant=\"h6\">Tokens Out</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(tokensOut[1], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(tokensOut[2], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <hr className={classes.hr} />\r\n      </Grid>\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          valid={isButtonEnabled()}\r\n          success={false}\r\n          fail={false}\r\n          onClick={remove}\r\n        >\r\n          <ArrowDownwardIcon className={classes.buttonIcon} />\r\n          Remove\r\n        </LoadingButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiquidityRemover;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport SwitchButton from \"./SwitchButton\";\r\nimport LiquidityDeployer from \"./LiquidityDeployer\";\r\nimport LiquidityRemover from \"./RemoveLiquidity\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    maxWidth: 500,\r\n    margin: \"auto\",\r\n    backgroundColor: \"#F2E3EA\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  footer: {\r\n    marginTop: \"10px\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction Liquidity(props) {\r\n  const classes = useStyles();\r\n\r\n  const [deploy, setDeploy] = React.useState(true);\r\n\r\n  const deploy_or_remove = (deploy) => {\r\n    if (deploy === true) {\r\n      return <LiquidityDeployer network={props.network}/>;\r\n    }\r\n    return <LiquidityRemover network={props.network}/>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            <SwitchButton setDeploy={setDeploy} />\r\n          </Typography>\r\n\r\n          {deploy_or_remove(deploy)}\r\n        </Paper>\r\n      </Container>\r\n\r\n      <Grid\r\n        container\r\n        className={classes.footer}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <p  class=\"footer-text\">\r\n          CookieSwap | By: @{\"\"}\r\n          <a class=\"footer-link\" href=\"https://twitter.com/hazardcookie\">hazardcookie</a>\r\n        </p>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Liquidity;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { ethers } from \"ethers\";\r\nimport Web3Provider from \"./network\";\r\nimport NarBar from \"./NavBar/NavBar\";\r\nimport CoinSwapper from \"./CoinSwapper/CoinSwapper\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport Liquidity from \"./Liquidity/Liquidity\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    h6: {\r\n      fontSize: 15,\r\n      \r\n    },\r\n  },\r\n\r\n\r\n  palette: {\r\n    primary: {\r\n      main: \"#6622CC\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#9e9e9e\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <SnackbarProvider maxSnack={3}>\r\n        <ThemeProvider theme={theme}>\r\n          <Web3Provider\r\n            render={(network) => (\r\n              <div>\r\n                <NarBar />\r\n                <Route exact path=\"/CookieSwap/\">\r\n                  <CoinSwapper network={network} />\r\n                </Route>\r\n\r\n                <Route exact path=\"/CookieSwap/liquidity\">\r\n                  <Liquidity network={network} />\r\n                </Route>\r\n              </div>\r\n            )}\r\n          ></Web3Provider>\r\n        </ThemeProvider>\r\n      </SnackbarProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}